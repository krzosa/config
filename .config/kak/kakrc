colorscheme gruvbox
set global tabstop     4
set global indentwidth 4
add-highlighter global/ number-lines -relative
hook global RawKey <F1> save_build
hook global NormalKey <c-q> q
hook global RawKey <c-w> save
hook global NormalKey <c-e> make-next-error
map global normal '#' :comment-line<ret>
set global makecmd './build.sh'

hook global InsertCompletionShow .* %{
    try %{
        # this command temporarily removes cursors preceded by whitespace;
        # if there are no cursors left, it raises an error, does not
        # continue to execute the mapping commands, and the error is eaten
        # by the `try` command so no warning appears.
        execute-keys -draft 'h<a-K>\h<ret>'
        map window insert <tab> <c-n>
        map window insert <s-tab> <c-p>
        hook -once -always window InsertCompletionHide .* %{
            unmap window insert <tab> <c-n>
            unmap window insert <s-tab> <c-p>
        }
    }
}

def ide %{
  rename-client main
  set global jumpclient main
  new rename-client tools
  set global toolsclient tools
  new rename-client docs
  set global docsclient docs
}

def save_build %{
  try %{format}
  w
  make
}

def save %{
  try %{format}
  w
}

hook global InsertChar j %{ try %{
  exec -draft hH <a-k>jj<ret> d
  exec <esc>
}}

hook global RegisterModified '"' %{ nop %sh{
  printf %s "$kak_main_reg_dquote" | xsel --input --clipboard
}}

map global user P '!xsel --output --clipboard<ret>'
map global user p '<a-!>xsel --output --clipboard<ret>'

hook global WinSetOption filetype=(c|cpp|h) %{
  set buffer formatcmd 'clang-format'
}

def dev %{
  set global makecmd './build.sh'
}

def test %{
  set global makecmd './test.sh'
}

def run %{
  tmux-terminal-window 'run.sh'
}

hook global BufCreate (.*/)?(\.kakrc\.local) %{
  set-option buffer filetype kak
}
try %{ source .kakrc.local }
source ~/.config/kak/find.kak
